@startuml

actor Client1
actor Client2
actor Client3
participant MatchFrontend
box "OpenMatch" #f0f8ff
    participant Frontend
    database StateStore
    participant Query
    participant MatchFunction
    participant Backend
    participant Director
end box
participant AllocateService
participant GameServer

Client1 -> MatchFrontend: RequestMatch
activate MatchFrontend
MatchFrontend -> Frontend: CreateTicket
Frontend --> StateStore: RegisterTicket


Client2 -> MatchFrontend: RequestMatch
activate MatchFrontend
MatchFrontend -> Frontend: CreateTicket
Frontend --> StateStore: RegisterTicket

Director -> Director: Triger(Periodically call)
activate Director
Director -> Backend: FetchMatches
activate Backend
Backend -> MatchFunction: execute
activate MatchFunction
MatchFunction -> Query: Fetch
activate Query
Query --> StateStore: Fetch
StateStore --> Query: Tickets
return Tickets
MatchFunction -> MatchFunction: CreateMatch
return Match
return Match

Director -> AllocateService: RequestAllocate
activate AllocateService
AllocateService --> GameServer: Allocate
AllocateService -[#red]>  GameServer: Notice IP / Port
return IP / Port

Director -> Director: CreateAssignment
Director -> Backend: SetAssignment
activate Backend
note left: Set this Assignment on all the Tickets in the Match
Backend --> StateStore: StoreMatch
deactivate Backend
deactivate Director

...

loop Assignment is not nil
    MatchFrontend -> Frontend: GetTicket
    Frontend --> StateStore: GetTicket
    StateStore --> Frontend: Ticket
    Frontend -> MatchFrontend: Ticket
    MatchFrontend -> Frontend: GetAssignment
    Frontend --> StateStore: GetAssignment
    StateStore --> Frontend: Assignment
    Frontend -> MatchFrontend: Assignment
end
MatchFrontend -> Frontend: DeleteTicket
Frontend --> StateStore: DeleteTicket
note left of MatchFrontend: Include IP / Port
return Assignment
return Assignment

== Start GameSession ==

Client1 -> Client1: Start GameSession
activate Client1
Client1 -> GameServer: Connection

activate GameServer

Client2 -> Client2: Start GameSession
activate Client2
Client2 -> GameServer: Connection

GameServer -> GameServer: Start GameSession

== Start Backfill ==

GameServer -[#red]> GameServer: Register Backfill
note left of GameServer: Include IP / Port + AdditionalPlayerCount
GameServer -[#red]> MatchFrontend: Register Backfill
activate MatchFrontend
MatchFrontend -[#red]> Frontend: CreateBackfillTicket
Frontend --[#red]> StateStore: RegisterBackfillTicket
deactivate MatchFrontend

...

Client3 -> MatchFrontend: RequestMatch
activate MatchFrontend
MatchFrontend -> Frontend: CreateTicket
Frontend --> StateStore: RegisterTicket

Director -> Director: Triger(Periodically call)
activate Director
Director -> Backend: FetchMatches
activate Backend
Backend -> MatchFunction: execute
activate MatchFunction
MatchFunction -> Query: Fetch
activate Query
Query --> StateStore: Fetch
StateStore --> Query: Tickets
return Tickets
note left: Include Backfill Ticket
MatchFunction -[#red]> MatchFunction: Create Match
return Match
return Match

Director -[#red]> Director: CreateAssignment
note left: Reference from Backfill Ticket
Director -> Backend: SetAssignment
alt Player full
  Director -[#red]> Frontend: Delete Backfill Ticket
else
  Director -[#red]> Backend: Update Backfill Ticket
end
deactivate Director
activate Backend
Backend --> StateStore: StoreMatch
deactivate Backend

loop Assignment is not nil
    MatchFrontend -> Frontend: GetTicket
    Frontend --> StateStore: GetTicket
    StateStore --> Frontend: Ticket
    Frontend -> MatchFrontend: Ticket
    MatchFrontend -> Frontend: GetAssignment
    Frontend --> StateStore: GetAssignment
    StateStore --> Frontend: Assignment
    Frontend -> MatchFrontend: Assignment
end
MatchFrontend -> Frontend: DeleteTicket
Frontend --> StateStore: DeleteTicket
note left of MatchFrontend: Include IP / Port
return Assignment

Client3 -> Client3: Start GameSession
activate Client3
Client3 -> GameServer: Connection

== End: Backfill ==

...

Client1 -> GameServer: End
GameServer -> Client1: End GameSession
destroy Client1
deactivate Client1
deactivate Client1
GameServer -> Client2: End GameSession
destroy Client2
deactivate Client2
deactivate Client2
GameServer -> Client3: End GameSession
destroy Client3
deactivate Client3
deactivate Client3

GameServer -> GameServer: End GameSession
deactivate GameServer

== End: GamePlay ==

destroy GameServer

@enduml